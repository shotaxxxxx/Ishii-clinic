@charset 'UTF-8';
//====================================
//  Grid
//====================================

/*
 Settings
--------------------------------- */
// Grid Column
$column: 12;

// Gutter Size
$gutters: (
  small: 1vw,
  normal: 2vw,
  large: 3vw,
) !default;

.c-grid {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;

  // Direction
  // ----------------------------
  &[data-dir='normal'] {
    flex-direction: row;
  }
  &[data-dir='reverse'] {
    flex-direction: row-reverse;
  }

  // Alignment
  // ----------------------------
  &[data-align~='start'] {
    justify-content: flex-start;
  }

  &[data-align~='center'] {
    justify-content: center;
  }

  &[data-align~='end'] {
    justify-content: flex-end;
  }

  &[data-align~='justify'] {
    justify-content: space-between;
  }

  &[data-align~='top'] {
    align-items: flex-start;
  }

  &[data-align~='middle'] {
    align-items: center;
  }

  &[data-align~='bottom'] {
    align-items: flex-end;
  }

  &__item {
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    margin: 0;

    // Alignment
    // ----------------------------
    &[data-align~='start'] {
      align-items: flex-start;
    }

    &[data-align~='center'] {
      align-items: center;
    }

    &[data-align~='end'] {
      align-items: flex-end;
    }

    &[data-align~='top'] {
      justify-content: flex-start;
    }

    &[data-align~='middle'] {
      justify-content: center;
    }

    &[data-align~='bottom'] {
      justify-content: flex-end;
    }
  }

  // Grid
  // ----------------------------
  &[data-gutter] {
    width: auto;

    & > .c-grid__item {
      border: solid transparent;
      background-clip: padding-box;
    }
  }

  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      $raio: 2.5;

      @if $breakpoint >= 768 {
        $raio: 1.5;
      }
      @if $breakpoint >= 1024 {
        $raio: 1;
      }

      @each $size, $val in $gutters {
        &[data-gutter='#{$size}'] {
          margin: -($val * $raio / 2);

          & > .c-grid__item {
            border-width: ($val * $raio / 2);
          }
        }
      }

      &__item {
        @for $i from 1 through $column {
          &[data-grid~='#{$device + $i}'] {
            width: percentage($i / $column);
          }
        }

        &[data-grid~='#{$device}Five'] {
          width: 20%;
        }

        &[data-grid~='#{$device}Auto'] {
          width: auto;
        }
      }
    }
  }
}
